generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  fullName       String   @map("full_name")
  emailAddress   String   @unique @map("email_address")
  password       String   @unique @map("password")
  phoneNumber    String   @unique @map("phone_number")
  county         String   @default("Nairobi") @map("county")
  town           String   @default("CBD") @map("town")
  shippingCharge Float    @default(120) @map("shipping_charge")
  isAdmin        Boolean  @default(false) @map("is_admin")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  isDeleted      Boolean  @default(false) @map("is_deleted")

  // Relations
  cartItems Cart[]
  orders    Order[]
  reviews   Review[]

  @@map("users")
}

model Product {
  id             String   @id @default(uuid())
  name           String   @map("product_name")
  description    String   @map("product_description")
  price          Float    @map("product_price")
  originalPrice  Float?   @map("original_price")
  image          String   @map("image_url")
  inStock        Boolean  @default(true) @map("in_stock")
  category       String   @map("product_category")
  specifications String   @map("product_specifications")
  packageContent String   @map("package_content")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  orderItems OrderItem[]
  reviews    Review[]

  @@map("products")
}

model Cart {
  id            String   @id @default(uuid())
  name          String   @map("product_name")
  price         Float    @map("product_price")
  originalPrice Float    @map("original_price")
  image         String   @map("image_url")
  inStock       Boolean  @map("in_stock")
  quantity      Int      @map("quantity")
  userId        String   @map("user_id")
  productId     String   @map("product_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@map("cart")
}

model Review {
  id        String   @id @default(uuid())
  productId String   @map("product_id")
  userId    String   @map("user_id")
  title     String   @map("title")
  text      String   @map("text")
  rating    Int      @map("number")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("reviews")
}

model Order {
  id           String    @id @default(uuid())
  userId       String    @map("user_id")
  status       String    @default("pending") @map("status")
  totalPrice   Float     @map("total")
  isPaid       Boolean   @default(false) @map("is_paid")
  paidAt       DateTime? @map("paid_at")
  deliveredAt  DateTime? @map("delivered_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String   @map("order_id")
  productId String   @map("product_id")
  name      String   @map("product_name")
  image     String   @map("image_url")
  quantity  Int      @map("quantity")
  price     Float    @map("price")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
