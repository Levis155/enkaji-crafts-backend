generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  fullName          String    @map("full_name")
  emailAddress      String    @unique @map("email_address")
  googleId          String?   @unique @map("google_id")
  password          String    @map("password")
  resetToken        String?   @map("reset_token")
  resetTokenExpiry  DateTime? @map("reset_token_expiry")
  phoneNumber       String    @unique @map("phone_number")
  county            String    @default("Nairobi") @map("county")
  town              String    @default("CBD") @map("town")
  shippingCharge    Float     @default(150) @map("shipping_charge")
  isAdmin           Boolean   @default(false) @map("is_admin")
  userRefreshToken  String?   @map("user_refresh_token")
  AdminRefreshToken String?   @map("admin_refresh_token")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  isDeleted         Boolean   @default(false) @map("is_deleted")

  cartItems     Cart[]
  wishlistItems Wishlist[]
  orders        Order[]
  reviews       Review[]

  @@map("users")
}

model Product {
  id             String   @id @default(uuid())
  name           String   @map("product_name")
  description    String   @map("product_description")
  price          Float    @map("product_price")
  originalPrice  Float?   @map("original_price")
  image          String   @map("image_url")
  inStock        Boolean  @default(true) @map("in_stock")
  category       String   @map("product_category")
  specifications String   @map("product_specifications")
  packageContent String   @map("package_content")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  orderItems OrderItem[]
  reviews    Review[]

  @@map("products")
}

model Cart {
  id            String   @id @default(uuid())
  name          String   @map("product_name")
  price         Float    @map("product_price")
  originalPrice Float    @map("original_price")
  image         String   @map("image_url")
  inStock       Boolean  @map("in_stock")
  quantity      Int      @map("quantity")
  userId        String   @map("user_id")
  productId     String   @map("product_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@map("cart")
}

model Wishlist {
  id            String   @id @default(uuid())
  name          String   @map("product_name")
  price         Float    @map("product_price")
  originalPrice Float    @map("original_price")
  image         String   @map("image_url")
  inStock       Boolean  @map("in_stock")
  userId        String   @map("user_id")
  productId     String   @map("product_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])

  @@map("wishlist")
}

model Review {
  id           String   @id @default(uuid())
  productId    String   @map("product_id")
  userId       String   @map("user_id")
  reviewAuthor String   @map("author_name")
  reviewTitle  String   @map("title")
  reviewBody   String   @map("body")
  rating       Int      @map("rating")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("reviews")
}

model Order {
  id                String      @id @default(uuid())
  orderNumber       String      @unique @map("order_number")
  userId            String      @map("user_id")
  totalPrice        Float       @map("total")
  county            String      @map("county")
  town              String      @map("town")
  status            OrderStatus @default(pending) @map("status")
  isPaid            Boolean     @default(false) @map("is_paid")
  paidAt            DateTime?   @map("paid_at")
  deliveredAt       DateTime?   @map("delivered_at")
  checkoutRequestId String      @unique @map("checkout_req_id")
  merchantRequestId String?     @map("merchant_req_id")
  resultDesc        String?     @map("result_description")
  createdAt         DateTime    @default(now()) @map("created_at")
  updatedAt         DateTime    @updatedAt @map("updated_at")

  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
}

enum OrderStatus {
  pending
  processed
  failed
  shipped
  delivered
}

model OrderItem {
  id         String   @id @default(uuid())
  orderId    String   @map("order_id")
  productId  String   @map("product_id")
  name       String   @map("product_name")
  image      String   @map("image_url")
  quantity   Int      @map("quantity")
  price      Float    @map("price")
  isReviewed Boolean  @default(false) @map("is_reviewed")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
